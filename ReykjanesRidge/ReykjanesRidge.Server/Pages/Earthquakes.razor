@page "/earthquakes"

@using ReykjanesRidge.Models.Dtos;
@using ReykjanesRidge.Services.Implementations;
@inject IJSRuntime JSRuntime
@inject EarthquakeService EarthquakeService;
@inject EarthquakeNotifierService EarthquakePopulatorService;

<h3>Earthquakes</h3>

<div id="threejscontainer" style="width: 300px; height: 300px;"></div>

@code {

    protected override async Task OnInitializedAsync()
    {
        EarthquakePopulatorService.OnEarthquakeAdded += AddEarthquake;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeAsync<IJSObjectReference>(
                "import", "./Pages/Earthquakes.razor.js");

            await JSRuntime.InvokeVoidAsync("EarthquakeVisualizerJS.load");
        }

        var earthquakes = await EarthquakeService.GetAll();

        foreach (var earthquake in earthquakes)
        {
            AddEarthquake(earthquake);
        }
    }

    public async void AddEarthquake(EarthquakeDto earthquakeDto)
    {
        await JSRuntime.InvokeVoidAsync("EarthquakeVisualizerJS.addEarthquake", earthquakeDto);
    }
}
